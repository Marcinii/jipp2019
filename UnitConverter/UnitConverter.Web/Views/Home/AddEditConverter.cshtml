@model UnitConversion.ConverterDTO


@using (Html.BeginForm("SaveConverter", "Home", new { converterType = Model != null ? Model.Name : ""}))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>@(Model != null ? Model.Name : "Nowy konwerter")</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.Label("Nazwa", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @id = "newConverterType", @name = "newConverterType" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@(Model  == null ? "Utwórz" : "Edytuj")" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Powrót do listy", "Converters")
</div>

@*@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}*@
